{"ast":null,"code":"var _jsxFileName = \"/Users/obanw/Public/auth0-app-frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport { Auth0Lock } from 'auth0-lock';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.mounted = false;\n\n    this.onAuthentication = authResult => {\n      // If we've authenticated, we'll have an access token.\n      // Use that access token to make an api call to Auth0 and retreive the user's profile information\n      this.lock.getUserInfo(authResult.accessToken, (error, profile) => {\n        if (error) {\n          console.error(error);\n          return;\n        }\n\n        console.log(profile); // After we get the profile, save both the accessToken and profile information\n        // into the local storage\n\n        localStorage.setItem('accessToken', authResult.accessToken);\n        localStorage.setItem('profile', JSON.stringify(profile)); // Populate the state with the accessToken and local storage\n        // if(this.mounted) {\n\n        this.setState({\n          accessToken: authResult.accessToken,\n          profile: profile\n        }); // }\n      });\n    };\n\n    this.showLogin = () => {\n      // Show the Auth0 popup window using the Auth0 lock library\n      this.lock.show();\n    };\n\n    this.logout = () => {\n      // Clear the localStorage\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('profile'); // Clean the state\n\n      this.setState({\n        accessToken: null,\n        profile: null\n      }); // Clear the Auth0 session then redirect back to the homepage\n\n      this.lock.logout();\n    };\n\n    this.state = {\n      accessToken: null,\n      profile: null\n    }; // Instantiate the Auth0Lock library\n\n    const lock = new Auth0Lock('lFtVP1NcySVcPICGMlXaf3166lKFCgPS', 'dev-zwn5zbui.auth0.com');\n    this.lock = lock;\n    this.lock.on('authenticated', this.onAuthentication); // Listen for the authenticated event on the Auth0 lock library and call the \n    // onAuthenticated method\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, this.state.profile, this.state.accessToken ?\n    /*#__PURE__*/\n    // We're logged in\n    // Load the user's name and a logout button\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }\n    }, this.state.profile.name, \" is logged in\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.logout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }\n    }, \"Logout\")) :\n    /*#__PURE__*/\n    // We're not logged in yet\n    // Display the login button\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 19\n      }\n    }, \"User is not logged in\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.showLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 19\n      }\n    }, \"Login\"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/obanw/Public/auth0-app-frontend/src/App.js"],"names":["React","Component","Auth0Lock","App","constructor","mounted","onAuthentication","authResult","lock","getUserInfo","accessToken","error","profile","console","log","localStorage","setItem","JSON","stringify","setState","showLogin","show","logout","removeItem","state","on","render","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAG1BG,EAAAA,WAAW,GAAG;AACZ;AADY,SAFhBC,OAEgB,GAFN,KAEM;;AAAA,SAmBdC,gBAnBc,GAmBMC,UAAD,IAAgB;AAEjC;AACA;AACA,WAAKC,IAAL,CAAUC,WAAV,CAAsBF,UAAU,CAACG,WAAjC,EAA8C,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAEhE,YAAID,KAAJ,EAAW;AACTE,UAAAA,OAAO,CAACF,KAAR,CAAcA,KAAd;AACA;AACD;;AAEDE,QAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAPgE,CAQhE;AACA;;AACAG,QAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCT,UAAU,CAACG,WAA/C;AACAK,QAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCC,IAAI,CAACC,SAAL,CAAeN,OAAf,CAAhC,EAXgE,CAahE;AACA;;AACA,aAAKO,QAAL,CAAc;AACZT,UAAAA,WAAW,EAAEH,UAAU,CAACG,WADZ;AAEZE,UAAAA,OAAO,EAAEA;AAFG,SAAd,EAfgE,CAmBlE;AACC,OApBD;AAsBD,KA7Ca;;AAAA,SA+CdQ,SA/Cc,GA+CF,MAAM;AAEhB;AACA,WAAKZ,IAAL,CAAUa,IAAV;AAED,KApDa;;AAAA,SAsDdC,MAtDc,GAsDL,MAAM;AAEb;AACAP,MAAAA,YAAY,CAACQ,UAAb,CAAwB,aAAxB;AACAR,MAAAA,YAAY,CAACQ,UAAb,CAAwB,SAAxB,EAJa,CAMb;;AACA,WAAKJ,QAAL,CAAc;AAAET,QAAAA,WAAW,EAAE,IAAf;AAAqBE,QAAAA,OAAO,EAAE;AAA9B,OAAd,EAPa,CASb;;AACA,WAAKJ,IAAL,CAAUc,MAAV;AAED,KAlEa;;AAEZ,SAAKE,KAAL,GAAa;AACXd,MAAAA,WAAW,EAAE,IADF;AAEXE,MAAAA,OAAO,EAAE;AAFE,KAAb,CAFY,CAOZ;;AACA,UAAMJ,IAAI,GAAG,IAAIN,SAAJ,CACX,kCADW,EAEX,wBAFW,CAAb;AAIA,SAAKM,IAAL,GAAYA,IAAZ;AACA,SAAKA,IAAL,CAAUiB,EAAV,CAAa,eAAb,EAA8B,KAAKnB,gBAAnC,EAbY,CAcZ;AACA;AAED;;AAkDDoB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKF,KAAL,CAAWZ,OADZ,EAGI,KAAKY,KAAL,CAAWd,WAAX;AAAA;AAEI;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKc,KAAL,CAAWZ,OAAX,CAAmBe,IADtB,kBADF,eAIE;AAAQ,MAAA,OAAO,EAAE,KAAKL,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,CAJJ;AAAA;AAaI;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,eAIE;AAAQ,MAAA,OAAO,EAAE,KAAKF,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,CAlBR,CADF,CADF;AA+BD;;AAtGyB;;AAyG5B,eAAejB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Auth0Lock } from 'auth0-lock';\nimport './App.css';\n\nclass App extends Component {\nmounted = false\n  \n  constructor() {\n    super();\n    this.state = {\n      accessToken: null,\n      profile: null\n    }\n  \n    // Instantiate the Auth0Lock library\n    const lock = new Auth0Lock(\n      'lFtVP1NcySVcPICGMlXaf3166lKFCgPS',\n      'dev-zwn5zbui.auth0.com'\n    );\n    this.lock = lock;\n    this.lock.on('authenticated', this.onAuthentication)\n    // Listen for the authenticated event on the Auth0 lock library and call the \n    // onAuthenticated method\n    \n  }\n\n  onAuthentication = (authResult) => {\n\n    // If we've authenticated, we'll have an access token.\n    // Use that access token to make an api call to Auth0 and retreive the user's profile information\n    this.lock.getUserInfo(authResult.accessToken, (error, profile) => {\n\n      if (error) {\n        console.error(error);\n        return;\n      }\n\n      console.log(profile)\n      // After we get the profile, save both the accessToken and profile information\n      // into the local storage\n      localStorage.setItem('accessToken', authResult.accessToken);\n      localStorage.setItem('profile', JSON.stringify(profile));\n\n      // Populate the state with the accessToken and local storage\n      // if(this.mounted) {\n      this.setState({\n        accessToken: authResult.accessToken,\n        profile: profile\n      });\n    // }\n    });\n\n  }\n\n  showLogin = () => {\n\n    // Show the Auth0 popup window using the Auth0 lock library\n    this.lock.show();\n\n  }\n\n  logout = () => {\n\n    // Clear the localStorage\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('profile');\n\n    // Clean the state\n    this.setState({ accessToken: null, profile: null });\n\n    // Clear the Auth0 session then redirect back to the homepage\n    this.lock.logout();\n\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        {this.state.profile}\n          {\n            this.state.accessToken ?\n              (\n                // We're logged in\n                // Load the user's name and a logout button\n                <div>\n                  <p>\n                    {this.state.profile.name} is logged in\n                  </p>\n                  <button onClick={this.logout}>Logout</button>\n                </div>\n              )\n              :\n              (\n                // We're not logged in yet\n                // Display the login button\n                <div>\n                  <p>\n                    User is not logged in\n                  </p>\n                  <button onClick={this.showLogin}>Login</button>\n                </div>\n              )\n          }\n        </header>\n      </div >\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}