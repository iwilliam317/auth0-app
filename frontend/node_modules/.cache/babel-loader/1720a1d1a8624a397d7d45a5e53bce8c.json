{"ast":null,"code":"var _jsxFileName = \"/Users/obanw/Public/auth0-app-frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport { Auth0Lock } from 'auth0-lock';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.mounted = false;\n\n    this.onAuthentication = authResult => {\n      // If we've authenticated, we'll have an access token.\n      // Use that access token to make an api call to Auth0 and retreive the user's profile information\n      this.lock.getUserInfo(authResult.accessToken, (error, profile) => {\n        if (error) {\n          console.error(error);\n          return;\n        }\n\n        console.log(profile);\n        localStorage.setItem('accessToken', authResult.accessToken);\n        localStorage.setItem('profile', JSON.stringify(profile));\n        this.forceUpdate(); // }\n      });\n    };\n\n    this.showLogin = () => {\n      this.lock.show();\n    };\n\n    this.logout = () => {\n      // Clear the localStorage\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('profile'); // Clean the state\n\n      this.setState({\n        accessToken: null,\n        profile: null\n      }); // Clear the Auth0 session then redirect back to the homepage\n\n      this.lock.logout();\n    };\n\n    this.fuck = (t, p) => {\n      this.setState({\n        accessToken: t,\n        profile: p\n      });\n    };\n\n    this.state = {\n      accessToken: null,\n      profile: null\n    }; // Instantiate the Auth0Lock library\n\n    const lock = new Auth0Lock('lFtVP1NcySVcPICGMlXaf3166lKFCgPS', 'dev-zwn5zbui.auth0.com');\n    this.lock = lock;\n    this.lock.on('authenticated', this.onAuthentication); // Listen for the authenticated event on the Auth0 lock library and call the \n    // onAuthenticated method\n  }\n\n  componentWillMount() {\n    // Check the local storage for the accessToken and profile information\n    const accessToken = localStorage.getItem('accessToken');\n    const profile = localStorage.getItem('profile');\n\n    if (accessToken && profile) {\n      // If they exist, load them into state\n      this.setState({\n        accessToken: accessToken,\n        profile: JSON.parse(profile)\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, this.state.profile, this.state.accessToken ?\n    /*#__PURE__*/\n    // We're logged in\n    // Load the user's name and a logout button\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }\n    }, this.state.profile.name, \" is logged in\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.logout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 19\n      }\n    }, \"Logout\")) :\n    /*#__PURE__*/\n    // We're not logged in yet\n    // Display the login button\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }\n    }, \"User is not logged in\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.showLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }\n    }, \"Login\"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/obanw/Public/auth0-app-frontend/src/App.js"],"names":["React","Component","Auth0Lock","App","constructor","mounted","onAuthentication","authResult","lock","getUserInfo","accessToken","error","profile","console","log","localStorage","setItem","JSON","stringify","forceUpdate","showLogin","show","logout","removeItem","setState","fuck","t","p","state","on","componentWillMount","getItem","parse","render","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Auth0Lock } from 'auth0-lock';\nimport './App.css';\n\nclass App extends Component {\nmounted = false\n  \n  constructor() {\n    super();\n    this.state = {\n      accessToken: null,\n      profile: null\n    }\n  \n    // Instantiate the Auth0Lock library\n    const lock = new Auth0Lock(\n      'lFtVP1NcySVcPICGMlXaf3166lKFCgPS',\n      'dev-zwn5zbui.auth0.com'\n    );\n    this.lock = lock;\n    this.lock.on('authenticated', this.onAuthentication)\n    // Listen for the authenticated event on the Auth0 lock library and call the \n    // onAuthenticated method\n    \n  }\n\n  componentWillMount() {\n     // Check the local storage for the accessToken and profile information\n     const accessToken = localStorage.getItem('accessToken');\n     const profile = localStorage.getItem('profile');\n \n     if (accessToken && profile) {\n \n       // If they exist, load them into state\n       this.setState({\n         accessToken: accessToken,\n         profile: JSON.parse(profile)\n       });\n \n     }\n  }\n\n  onAuthentication = (authResult) => {\n\n    // If we've authenticated, we'll have an access token.\n    // Use that access token to make an api call to Auth0 and retreive the user's profile information\n    this.lock.getUserInfo(authResult.accessToken, (error, profile) => {\n\n      if (error) {\n        console.error(error);\n        return;\n      }\n\n      console.log(profile)\n\n      localStorage.setItem('accessToken', authResult.accessToken);\n      localStorage.setItem('profile', JSON.stringify(profile));\n\n\n        this.forceUpdate() \n    // }\n    });\n\n  }\n\n  showLogin = () => {\n    this.lock.show();\n\n  }\n\n  logout = () => {\n\n    // Clear the localStorage\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('profile');\n\n    // Clean the state\n    this.setState({ accessToken: null, profile: null });\n\n    // Clear the Auth0 session then redirect back to the homepage\n    this.lock.logout();\n\n  }\n\n  fuck = (t, p) => {\n    this.setState({accessToken:t, profile: p})\n  } \n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        {this.state.profile}\n          {\n            this.state.accessToken ?\n              (\n                // We're logged in\n                // Load the user's name and a logout button\n                <div>\n                  <p>\n                    {this.state.profile.name} is logged in\n                  </p>\n                  <button onClick={this.logout}>Logout</button>\n                </div>\n              )\n              :\n              (\n                // We're not logged in yet\n                // Display the login button\n                <div>\n                  <p>\n                    User is not logged in\n                  </p>\n                  <button onClick={this.showLogin}>Login</button>\n                </div>\n              )\n          }\n        </header>\n      </div >\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}